Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
                              test_readSiliconRev.o (__prologue_saves__)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
                              test_readSiliconRev.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              test_readSiliconRev.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              test_readSiliconRev.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strncmp.o)
                              test_readSiliconRev.o (strncmp)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strnlen.o)
                              test_readSiliconRev.o (strnlen)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
                              test_readSiliconRev.o (itoa)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
LOAD test_readSiliconRev.o
LOAD enc28j60.o
LOAD ip_arp_udp_tcp.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xe2c
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000068       0xb1 test_readSiliconRev.o
                0x0000011a                . = ALIGN (0x2)
 *fill*         0x00000119        0x1 
                0x0000011a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000011a        0x0 linker stubs
 *(.trampolines*)
                0x0000011a                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000011a                __ctors_start = .
 *(.ctors)
                0x0000011a                __ctors_end = .
                0x0000011a                __dtors_start = .
 *(.dtors)
                0x0000011a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000011a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x0000011a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000011a        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000126       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x00000126                __do_copy_data
 .init4         0x0000013c       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000013c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000014c        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000154        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x00000154                __vector_22
                0x00000154                __vector_1
                0x00000154                __vector_24
                0x00000154                __vector_12
                0x00000154                __bad_interrupt
                0x00000154                __vector_6
                0x00000154                __vector_3
                0x00000154                __vector_23
                0x00000154                __vector_25
                0x00000154                __vector_11
                0x00000154                __vector_13
                0x00000154                __vector_17
                0x00000154                __vector_19
                0x00000154                __vector_7
                0x00000154                __vector_5
                0x00000154                __vector_4
                0x00000154                __vector_9
                0x00000154                __vector_2
                0x00000154                __vector_21
                0x00000154                __vector_15
                0x00000154                __vector_8
                0x00000154                __vector_14
                0x00000154                __vector_10
                0x00000154                __vector_16
                0x00000154                __vector_18
                0x00000154                __vector_20
 .text          0x00000158       0x5e test_readSiliconRev.o
                0x00000158                print_webpage
 .text          0x000001b6      0x496 enc28j60.o
                0x000001b6                enc28j60ReadOp
                0x000001e2                enc28j60WriteOp
                0x000001fc                enc28j60ReadBuffer
                0x00000228                enc28j60WriteBuffer
                0x00000252                enc28j60SetBank
                0x00000296                enc28j60Read
                0x000002ba                enc28j60Write
                0x000002e0                enc28j60PhyReadH
                0x00000314                enc28j60PhyWrite
                0x0000035a                enc28j60clkout
                0x00000366                enc28j60Init
                0x000004b2                enc28j60getrev
                0x000004ba                enc28j60linkup
                0x000004cc                enc28j60PacketSend
                0x00000552                enc28j60PacketReceive
 .text          0x0000064c      0x4e8 ip_arp_udp_tcp.o
                0x0000064c                checksum
                0x000006f4                init_ip_arp_udp_tcp
                0x0000071e                eth_type_is_arp_and_my_ip
                0x00000752                eth_type_is_ip_and_my_ip
                0x0000078a                make_eth
                0x000007b0                fill_ip_hdr_checksum
                0x000007da                make_ip
                0x00000804                make_tcphead
                0x00000880                make_arp_answer_from_request
                0x000008e8                make_echo_reply_from_request
                0x00000922                make_udp_reply_from_request
                0x000009a4                make_tcp_synack_from_syn
                0x000009ee                get_tcp_data_pointer
                0x00000a0c                init_len_info
                0x00000a52                fill_tcp_data_p
                0x00000a76                fill_tcp_data
                0x00000a92                make_tcp_ack_from_any
                0x00000aea                make_tcp_ack_with_data
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strncmp.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strnlen.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
 .text          0x00000b34        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000b34                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000b34      0x1ca test_readSiliconRev.o
                0x00000b34                main
 .text.libgcc.mul
                0x00000cfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x00000cfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc   0x00000cfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x00000cfe       0x38 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
                0x00000cfe                __prologue_saves__
 .text.libgcc.builtins
                0x00000d36        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x00000d36        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.fixed
                0x00000d36        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x00000d36        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x00000d36        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc   0x00000d36        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x00000d36       0x36 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
                0x00000d36                __epilogue_restores__
 .text.libgcc.builtins
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.mul
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000d6c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000d6c       0x1c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strncmp.o)
                0x00000d6c                strncmp
 .text.avr-libc
                0x00000d88       0x16 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strnlen.o)
                0x00000d88                strnlen
 .text.avr-libc
                0x00000d9e       0x42 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
                0x00000d9e                itoa
 .text.avr-libc
                0x00000de0       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
                0x00000de0                strrev
 .text.libgcc.mul
                0x00000e00        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000e00       0x28 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000e00                __udivmodhi4
 .text.libgcc   0x00000e28        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000e28        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000e28        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000e28        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000e28        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000e28                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000e28        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000e28                exit
                0x00000e28                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000e28        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000e2c                _etext = .

.data           0x00800100       0x12 load address 0x00000e2c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0xa test_readSiliconRev.o
 .data          0x0080010a        0x0 enc28j60.o
 .data          0x0080010a        0x2 ip_arp_udp_tcp.o
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strncmp.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strnlen.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
 .data          0x0080010c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0080010c        0x5 test_readSiliconRev.o
 *(.gnu.linkonce.d*)
                0x00800112                . = ALIGN (0x2)
 *fill*         0x00800111        0x1 
                0x00800112                _edata = .
                0x00800112                PROVIDE (__data_end, .)

.bss            0x00800112      0x238
                0x00800112                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800112        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800112      0x227 test_readSiliconRev.o
 .bss           0x00800339        0x3 enc28j60.o
 .bss           0x0080033c        0xe ip_arp_udp_tcp.o
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_prologue.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_epilogue.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strncmp.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strnlen.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
 .bss           0x0080034a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x0080034a                PROVIDE (__bss_end, .)
                0x00000e2c                __data_load_start = LOADADDR (.data)
                0x00000e3e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080034a        0x0
                0x0080034a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080034a                PROVIDE (__noinit_end, .)
                0x0080034a                _end = .
                0x0080034a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000     0x33a8
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .stab          0x000006cc      0x93c test_readSiliconRev.o
                                0x948 (size before relaxing)
 .stab          0x00001008      0xe4c enc28j60.o
                               0x1014 (size before relaxing)
 .stab          0x00001e54     0x1170 ip_arp_udp_tcp.o
                               0x1338 (size before relaxing)
 .stab          0x00002fc4       0xc0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strncmp.o)
                                 0xcc (size before relaxing)
 .stab          0x00003084       0x9c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strnlen.o)
                                 0xa8 (size before relaxing)
 .stab          0x00003120      0x1b0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x000032d0       0xd8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000     0x14da
 *(.stabstr)
 .stabstr       0x00000000     0x14da /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 test_readSiliconRev.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 enc28j60.o
 .comment       0x00000000       0x12 ip_arp_udp_tcp.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(test_readSiliconRev.out elf32-avr)
LOAD linker stubs
